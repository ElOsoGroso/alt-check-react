[{"C:\\Users\\NickDipples\\Documents\\GitHub\\alt-check-react\\src\\index.js":"1","C:\\Users\\NickDipples\\Documents\\GitHub\\alt-check-react\\src\\components\\CategoryTabs\\CategoryTabs.js":"2","C:\\Users\\NickDipples\\Documents\\GitHub\\alt-check-react\\src\\App.js":"3","C:\\Users\\NickDipples\\Documents\\GitHub\\alt-check-react\\src\\components\\Table.js":"4","C:\\Users\\NickDipples\\Documents\\GitHub\\alt-check-react\\src\\components\\UserInfo.js":"5","C:\\Users\\NickDipples\\Documents\\GitHub\\alt-check-react\\src\\components\\CategoryTabs\\Hiscores.js":"6","C:\\Users\\NickDipples\\Documents\\GitHub\\alt-check-react\\src\\components\\CategoryTabs\\TextBox.js":"7","C:\\Users\\NickDipples\\Documents\\GitHub\\alt-check-react\\src\\reportWebVitals.js":"8"},{"size":517,"mtime":1610778585799,"results":"9","hashOfConfig":"10"},{"size":836,"mtime":1612316221129,"results":"11","hashOfConfig":"10"},{"size":13949,"mtime":1615693025704,"results":"12","hashOfConfig":"10"},{"size":2948,"mtime":1615692538293,"results":"13","hashOfConfig":"10"},{"size":2565,"mtime":1615689940184,"results":"14","hashOfConfig":"10"},{"size":3024,"mtime":1615691792592,"results":"15","hashOfConfig":"10"},{"size":285,"mtime":1610793502619,"results":"16","hashOfConfig":"10"},{"size":375,"mtime":1610778585800,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"98vd5t",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\NickDipples\\Documents\\GitHub\\alt-check-react\\src\\index.js",[],"C:\\Users\\NickDipples\\Documents\\GitHub\\alt-check-react\\src\\components\\CategoryTabs\\CategoryTabs.js",[],"C:\\Users\\NickDipples\\Documents\\GitHub\\alt-check-react\\src\\App.js",[],"C:\\Users\\NickDipples\\Documents\\GitHub\\alt-check-react\\src\\components\\Table.js",["35","36","37","38","39"],"import React, { Component } from 'react'\r\n\r\nexport default class Table extends Component {\r\n  render() {\r\n    const {\r\n      className = '',\r\n      rowCount = false,\r\n      rows = [],\r\n      template = [],\r\n      totalRows = null,\r\n      clickCell,\r\n      title\r\n    } = this.props\r\n\r\n    return (\r\n      <div className={'div-table ' + className}>\r\n        <h3 className=\"table-title\">{title}</h3>\r\n      <React.Fragment>\r\n        <span role=\"status\" className=\"row-count\">\r\n          <span className=\"row-count-text\">\r\n            {rowCount && rows.length > 0 ? `Results: ${totalRows || rows.length}` : ''}\r\n          </span>\r\n        </span>\r\n        <table className=\"table\">\r\n          {template && rows.length > 0 ? (\r\n            <thead\r\n              className={'div-table-heading'}\r\n            >\r\n              <tr>\r\n                {template.map((t, i) => (\r\n                  <th\r\n                    className={`div-table-head`}\r\n                    key={i}\r\n                    tabIndex={undefined}\r\n                  >\r\n                    <div className=\"flex-row\">\r\n                      <span className=\"header-label\">{t.label}</span>\r\n                    </div>\r\n                  </th>\r\n                ))}\r\n              </tr>\r\n            </thead>\r\n          ) : null}\r\n          <tbody className=\"div-table-body\">\r\n            {rows.map((row, i) => {\r\n              return (\r\n                <Row\r\n                  cells={row}\r\n                  template={template}\r\n                  onCellClick={clickCell}\r\n                  alert={row.ALERT_YN}\r\n                  rowIndex={i + 1}\r\n                  key={row.ID + i.toString()}\r\n                />\r\n              )\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </React.Fragment>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nclass Row extends React.Component {\r\n  render() {\r\n    const {\r\n      label,\r\n      template,\r\n      cells,\r\n      onCellClick\r\n    } = this.props\r\n    return (\r\n      <tr\r\n        className={`div-table-row`}\r\n        aria-label={label}\r\n        onKeyPress={this.checkForClick}\r\n      >\r\n        {template.map((t, i) => {\r\n          const cellContent = (\r\n            <React.Fragment>\r\n              { (t.id == \"MESSAGE\" || t.id == \"NAME\" || t.id == \"FLAGGED_RSN\" || t.id == \"FLAGGED_USER\") && cells[t.id] != \"NO RSN INCLUDED\" ?   (\r\n                <span className=\"cell-click\" onClick={() => onCellClick(cells[t.id],t.id)}>{cells[t.id]}</span>\r\n              ) : <span className=\"cell\">{cells[t.id]}</span>}\r\n            </React.Fragment>\r\n          )\r\n          return (\r\n            <td\r\n              className={`div-table-cell`}\r\n              key={i}\r\n            >\r\n              {cells.ALERT && i === 0 && (\r\n                <div className=\"badge row-alert\" key={i}>\r\n                  !\r\n                </div>\r\n              )}\r\n              {cellContent}\r\n            </td>\r\n          )\r\n        })}\r\n      </tr>\r\n    )\r\n  }\r\n}\r\n\r\n","C:\\Users\\NickDipples\\Documents\\GitHub\\alt-check-react\\src\\components\\UserInfo.js",[],"C:\\Users\\NickDipples\\Documents\\GitHub\\alt-check-react\\src\\components\\CategoryTabs\\Hiscores.js",["40"],"C:\\Users\\NickDipples\\Documents\\GitHub\\alt-check-react\\src\\components\\CategoryTabs\\TextBox.js",[],"C:\\Users\\NickDipples\\Documents\\GitHub\\alt-check-react\\src\\reportWebVitals.js",[],{"ruleId":"41","severity":1,"message":"42","line":82,"column":23,"nodeType":"43","messageId":"44","endLine":82,"endColumn":25},{"ruleId":"41","severity":1,"message":"42","line":82,"column":44,"nodeType":"43","messageId":"44","endLine":82,"endColumn":46},{"ruleId":"41","severity":1,"message":"42","line":82,"column":62,"nodeType":"43","messageId":"44","endLine":82,"endColumn":64},{"ruleId":"41","severity":1,"message":"42","line":82,"column":87,"nodeType":"43","messageId":"44","endLine":82,"endColumn":89},{"ruleId":"41","severity":1,"message":"45","line":82,"column":121,"nodeType":"43","messageId":"44","endLine":82,"endColumn":123},{"ruleId":"41","severity":1,"message":"45","line":5,"column":19,"nodeType":"43","messageId":"44","endLine":5,"endColumn":21},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='."]